jobs:

- name: reconfigure
  serial: true
  plan:
  - get: src
    params: {depth: 1}
    trigger: true
  - get: secrets
    # Remember to manually trigger a new build if you upload a new version
    # of the credentials file.
    trigger: false
  - set_pipeline: ((name))
    file: src/ci/pipeline.yml
    var_files:
    - secrets/((name)).yml

- name: test
  plan:
    - get: src
      params: {depth: 1}
      trigger: true
      passed: [reconfigure]

    - task: test
      config:
        inputs: 
          - name: src
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: python
            tag: "3.8"
        run:
          path: src/ci/test.sh

- name: build-test-images
  plan:
    - get: src
      params: {depth: 1}
      trigger: true
      passed: [reconfigure]

    - put: dev-elasticsearch-image
      params:
        build: src/docker/elasticsearch
        dockerfile: src/docker/elasticsearch/dockerfile
        tag_as_latest: true
        cache: true

    - put: dev-kibana-image
      params:
        build: src/docker/kibana
        dockerfile: src/docker/kibana/dockerfile
        tag_as_latest: true
        cache: true

- name: cf
  plan:
    - get: src
      params: {depth: 1}
      trigger: true
      passed: [build-test-images]
    
    - put: cf-dev
      params:
        manifest: src/cf/elasticsearch-manifest.yml
    
    - put: cf-dev
      params:
        manifest: src/cf/kibana-manifest.yml
    
    - put: cf-dev
      params:
        path: src
        manifest: src/cf/proxy-manifest.yml
        vars:
          cf_url: ((dev-cf-url))
          uaa_auth_url: ((dev-uaa-auth-url))
          uaa_token_url: ((dev-uaa-token-url))
          uaa_client_id: ((dev-uaa-client-id))
          uaa_client_secret: ((dev-uaa-client-secret))
          secret_key: ((dev-secret-key))
          session_lifetime: "3600"
          public_route: ((dev-public-url))

    - task: update-networking
      file: src/ci/update-networking.yml
      params:
        CF_API_URL: ((dev-cf-api-url))
        CF_USERNAME: ((dev-cf-username))
        CF_PASSWORD: ((dev-cf-password))
        CF_ORGANIZATION: ((dev-cf-organization))
        CF_SPACE: ((dev-cf-space)


##########################
#  RESOURCES

resources:

- name: secrets
  type: s3-iam
  icon: cloud-lock
  source:
    region_name: ((concourse-varz-bucket-region))
    bucket: ((concourse-varz-bucket))
    versioned_file: ((name)).yml

- name: src
  type: git
  icon: github-circle
  check_every: 10s
  source:
    uri: https://github.com/cloud-gov/((name))
    branch: ((git-branch))

- name: dev-elasticsearch-image
  type: docker-image
  icon: docker
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: ((docker-image-elasticsearch-dev))

- name: dev-kibana-image
  type: docker-image
  icon: docker
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: ((docker-image-kibana-dev))

- name: cf-dev
  type: cf
  icon: cloud-upload
  source:
    api: ((dev-cf-api-url))
    username: ((dev-cf-username))
    password: ((dev-cf-password))
    organization: ((dev-cf-organization))
    space: ((dev-cf-space))

############################
#  RESOURCE TYPES

resource_types:

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
